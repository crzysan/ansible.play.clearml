---
- name: init the terraform if .terraform is not there
  shell: terraform init
  args:
    chdir: "../terraform/"
    creates: "../terraform/.terraform/"

- name: run the terraform script 
  terraform:
    project_path: "../terraform/"
    state: "{{ aws_instance_state }}"
    variables: 
      aws_region: "{{ aws_region }}"
      aws_access_key_id: "{{ aws_access_key_id }}"
      aws_secret_access_key: "{{ aws_secret_access_key }}"
      aws_ami_id: "{{ aws_ami_id }}"
      public_key: "{{ public_key }}"
  register: terra_result

- name: show terra_result 
  debug:
    var: terra_result


- name: set vm_ip / name
  set_fact:
    vm_ip_server: "{{ terra_result.outputs.public_ip_server.value }}"
    vm_ips_agents: "{{ terra_result.outputs.public_ips_agents.value }}"
    vm_dns_server: "{{ terra_result.outputs.public_dns_server.value }}"
  when: 
    - terra_result.outputs.state_server is defined
    - terra_result.outputs.state_agents is defined

- name: Add server hostname to all.yml
  lineinfile:
    path: ../inventory/group_vars/all/all.yml
    regexp: '^server_public_dns'
    line: 'server_public_dns: {{ vm_dns_server }}'


- name: create the dynamic inventory
  block: 
    - name: remove old dynamic group_vars file
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - ../inventory/group_vars/clearml_servers
        - ../inventory/group_vars/clearml_agents

    - name: create new group_vars file
      file:
        path: "{{ item }}"
        state: touch
      with_items:
        - ../inventory/group_vars/clearml_servers
        - ../inventory/group_vars/clearml_agents

    - name: create new dynamic host file
      template:
        src: "hosts.j2"
        dest: "../inventory/hosts"
        mode: 0644

    - name: add retrieved IP to file
      blockinfile:
        path: ../inventory/group_vars/clearml_servers
        marker: ""
        block: |
          ---
          ansible_host: {{ vm_ip_server }}
          ansible_user: {{ remote_user[hypervisor] }}
          become_user: {{ remote_user[hypervisor] }}
          remote_user: {{ remote_user[hypervisor] }}
          become: true


    - name: add retrieved IP to file
      blockinfile:
        path: ../inventory/group_vars/clearml_agents
        marker: ""
        block: |
          ---
          ansible_user: {{ remote_user[hypervisor] }}
          become_user: {{ remote_user[hypervisor] }}
          remote_user: {{ remote_user[hypervisor] }}
          become: true

          clearml_web_server: "http://{{ vm_dns_server }}:8080"
          clearml_api_server: "http://{{ vm_dns_server }}:8008"
          clearml_files_server: "http://{{ vm_dns_server }}:8081"

    - name: Add host
      add_host:
        hostname: "{{ vm_ip_server }}"
        groups: clearml_servers
        remote_user: "{{ remote_user[hypervisor] }}"

    - name: Add host
      add_host:
        hostname: "{{ item }}"
        groups: clearml_agents
        remote_user: "{{ remote_user[hypervisor] }}"
      with_items: "{{ vm_ips_agents }}"

  when: 
    - terra_result.outputs.state_server is defined
    - terra_result.outputs.state_agents is defined

- name: Collect facts again
  setup:

################################
# pause                        #
################################
- name: Wait 300 seconds for port 22 to become open and contains the string "OpenSSH"
  wait_for:
    port: 22
    host: '{{ vm_ip_server }}'
    search_regex: OpenSSH
    delay: 10
  vars:
    ansible_connection: local
  when: vm_ip_server is defined
